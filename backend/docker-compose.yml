# Campus Connect Backend - Docker Compose
# For local development and testing

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: campus-connect-db
    environment:
      POSTGRES_DB: campus_connect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - campus-connect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d campus_connect"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching - optional)
  redis:
    image: redis:7-alpine
    container_name: campus-connect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - campus-connect-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Campus Connect Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: campus-connect-backend
    environment:
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/campus_connect
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      
      # JWT Configuration
      JWT_SECRET: mySecretKey123456789012345678901234567890123456789012345678901234567890
      JWT_EXPIRATION: 86400000
      JWT_REFRESH_EXPIRATION: 604800000
      
      # Server Configuration
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: dev
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
      
      # File Upload Configuration
      UPLOAD_DIR: /app/uploads
      MAX_FILE_SIZE: 10MB
      MAX_REQUEST_SIZE: 10MB
      
      # Logging Configuration
      LOG_LEVEL: DEBUG
      LOG_FILE_PATH: /var/log/campus-connect/application.log
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Application Configuration
      APP_NAME: Campus Connect
      APP_VERSION: 1.0.0
      
      # Security Configuration
      BCRYPT_STRENGTH: 12
      
      # Rate Limiting
      RATE_LIMIT_ENABLED: true
      RATE_LIMIT_REQUESTS_PER_MINUTE: 100
      
      # Monitoring
      ACTUATOR_ENDPOINTS_ENABLED: true
      METRICS_ENABLED: true
    ports:
      - "8080:8080"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/var/log/campus-connect
    networks:
      - campus-connect-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Nginx (for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: campus-connect-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - campus-connect-network
    depends_on:
      - backend
    restart: unless-stopped

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

# Custom network
networks:
  campus-connect-network:
    driver: bridge